from optparse import OptionParser
from os.path import exists

from log import log


def read_train_csv(train_file_path: str, malware_label: list, benign_label: list):
    with open(train_file_path, 'r', encoding='utf-8') as file_object:
        for idx, line in enumerate(file_object.readlines()):
            # csv header는 처리 하지 않음.
            if idx == 0:
                continue
            is_malware = int(line.split(',')[0])
            if is_malware:
                malware_label.append(idx)
            else:
                benign_label.append(idx)


def main(train_file_path, predict_file_path):
    if exists(train_file_path) is False:
        log().error("train file path not exist({})".format(train_file_path))
        return -1
    if exists(predict_file_path) is False:
        log().error("predict result file path not exist({})".format(predict_file_path))
        return -1

    malware_label = []
    benign_label = []
    read_train_csv(train_file_path, malware_label, benign_label)


if __name__ == '__main__':
    opt_parser = OptionParser()
    opt_parser.set_defaults(inmemory=False, debug=False, UseLocalTimezone=True, UseGUI=False)
    opt_parser.add_option('-t', '--train-file-path',
                          dest='train_file_path',
                          help='input train file path')
    opt_parser.add_option('-p', '--predict-file-path',
                          dest='predict_file_path',
                          help='input predict file path')
    options, _ = opt_parser.parse_args()
    log().debug("{}, {}".format(options.train_file_path, options.predict_file_path))
    exit(main(options.train_file_path, options.predict_file_path))
