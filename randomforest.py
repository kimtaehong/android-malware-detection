# -*- coding: utf-8 -*-
import numpy as np
import pandas as pd
import itertools

from sklearn.ensemble import RandomForestClassifier
from sklearn.datasets import make_classification

predict_result = list()
fp1 = open("./RandomForest_Result.csv", 'w')
fp1.write("Hash_Name" + "," + "Type" + "," + "Cluster_No." + "\n")

train_input = '/Users/jungbeenyu/Documents/GitHub/android-malware-detection/data/train.csv'
test_input = '/Users/jungbeenyu/Documents/GitHub/android-malware-detection/data/test.csv'

train_pre = pd.read_csv(train_input)
train_dataset = train_pre.values
train_Hash_Name = train_dataset[:,0]
train_Type = np.array(list(train_dataset[:,1]))
train_Feature = np.array(list(train_dataset[:,2:]))

test_pre = pd.read_csv(test_input)
test_dataset = test_pre.values
test_Hash_Name = test_dataset[:,0]
test_Type = np.array(list(test_dataset[:,1]))
test_Feature = np.array(list(test_dataset[:,2:]))
print(len(train_Feature[1]))
print(len(test_Feature[1]))

clf = RandomForestClassifier(n_estimators=100, max_depth=2,random_state=0)
clf.fit(train_Feature, train_Type)

for test_count in range(0,len(test_Hash_Name)):
	each_result = clf.predict([test_Feature[test_count]])
	fp1.write(str(test_Hash_Name[test_count]) + "," + str(each_result)[1:-1] + "\n")


